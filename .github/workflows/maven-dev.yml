name: Java CI with Maven Spring Boot 2

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        java-version: [ 8 ]
        os: [ ubuntu-latest ]

    env:
      MAX_DATABASE_USERNAME: root
      MAX_DATABASE_PASSWORD: nacos
      MAX_DATABASE: nacos
      VERSION: 0.0.1-SNAPSHOT

    services:
      mysql:
        image: mysql:8.0.36
        env:
          MYSQL_DATABASE: ${{ env.MAX_DATABASE }}
          MYSQL_ROOT_PASSWORD: ${{ env.MAX_DATABASE_PASSWORD }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 8
        uses: actions/setup-java@v4
        with:
          java-version: 8
          distribution: 'temurin'


      - name: Wait for MySQL
        run: |
          sleep 10
          until docker exec $(docker ps -qf "ancestor=mysql:8.0.36") mysqladmin ping --silent; do
              echo 'Waiting for MySQL to be available...'
              sleep 10
          done
          sleep 10

      - name: Set ENV
        shell: sh
        run: |
          docker ps
          MAX_DATABASE_HOST=`docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $(docker ps -qf 'ancestor=mysql:8.0.36')`
          echo "MAX_DATABASE_HOST=$MAX_DATABASE_HOST"
          echo "MAX_DATABASE_HOST=$MAX_DATABASE_HOST" >> $GITHUB_ENV
          echo ${{ env.MAX_DATABASE_HOST }}

      - name: Get ENV
        shell: sh
        run: |
          echo ${{ env.MAX_DATABASE_HOST }}



      - name: Init MySQL
        run: |
          mysql --version
          mysql -u ${MAX_DATABASE_USERNAME} -p${MAX_DATABASE_PASSWORD} --host=${{ env.MAX_DATABASE_HOST }} ${MAX_DATABASE} < sql/1-nacos-mysql-schema.sql
          mysql -u ${MAX_DATABASE_USERNAME} -p${MAX_DATABASE_PASSWORD} --host=${{ env.MAX_DATABASE_HOST }} ${MAX_DATABASE} < sql/2-nacos-mysql-data.sql

      - name: Java version
        run: java -version

      - name: Build JDK ${{ matrix.java-version }}
        run: mvn -V clean package source:jar javadoc:jar -Pjavadoc -U -DskipTests=true

      - name: Build JDK ${{ matrix.java-version }}
        run: mvn -V clean package source:jar -U -DskipTests=true

      - name: Build/Test Nacos
        run: mvn clean package -U -pl nacos -DskipTests=false
      - name: Run Nacos
        run: |
          nohup java -jar nacos/target/nacos-${{ env.VERSION }}.jar > nohup-nacos.out 2>&1 &
          sleep 20s
          cat nohup-nacos.out
          curl "http://127.0.0.1:8848/nacos/v1/cs/configs?dataId=&group=&appName=&config_tags=&pageNo=1&pageSize=10&tenant=&search=blur" && echo
          cat nohup-nacos.out

      - name: Run Passport
        run: |
          nohup java -jar spring-cloud-max-passport/target/spring-cloud-max-passport-${{ env.VERSION }}.jar > nohup-passport.out 2>&1 &
          sleep 20s
          cat nohup-passport.out

      - name: Run File
        run: |
          nohup java -jar spring-cloud-max-file/target/spring-cloud-max-file-${{ env.VERSION }}.jar > nohup-file.out 2>&1 &
          sleep 20s
          cat nohup-file.out






